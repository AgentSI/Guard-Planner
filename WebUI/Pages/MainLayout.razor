@using Application.DTOs
@using Microsoft.AspNetCore.Components.Authorization
@using MudBlazor
@using WebUI.Pages.Shared
@using WebUI.Services.UserAccountServices

@inherits LayoutComponentBase

@inject CurrentUserDto currentUser
@inject IUserAccountService userService
@inject NavigationManager navigationManager

<MudThemeProvider IsDarkMode=true />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Elevation="0">
        <AuthorizeView>
            <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
            <MudButton Color="Color.Inherit" Edge="Edge.Start" Disabled="true">@currentUser.UserRole</MudButton>
        </AuthorizeView>
        <MudSpacer />
        <AuthorizeView>
            <MudButton StartIcon="@Icons.Material.Filled.Logout" Color="Color.Inherit" OnClick="LogOut">LogOut</MudButton>
            <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="1" Variant="DrawerVariant.Responsive">
                <NavMenu />
            </MudDrawer>
        </AuthorizeView>
    </MudAppBar>

    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.ExtraLarge">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private async Task LogOut()
    {
        await userService.Logout();
        navigationManager.NavigateTo("/login", true);
        StateHasChanged();
    }

    protected override async Task OnInitializedAsync()
    {
        if (!currentUser.IsAuthenticated)
            navigationManager.NavigateTo("/");

        StateHasChanged();
    }
}
