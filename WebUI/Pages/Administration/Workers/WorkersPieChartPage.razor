@page "/workers-diagram"

@using Application.DTOs
@using Application.Interfaces.Pagination
@using WebUI.Services.WorkerServices

@inject IWorkerService workerService

<AuthorizeView>
    <div class="d-flex justify-start flex-grow-1 gap-4 mb-2 mt-4">
        <MudIconButton Icon="@Icons.Material.Filled.ArrowBack" Color="Color.Primary" Href="/workers" />
    </div>
</AuthorizeView>

<MudPaper Class="pa-4">
    <MudText Typo="Typo.h4">Distribuția lucrătorilor în funcție de procent-ul de gărzi.</MudText>
    <MudChart ChartType="ChartType.Pie" 
              InputData="@data"
              InputLabels="@labels"
              Width="300px"
              Height="300px" />
</MudPaper>

@code {
    double[] data;
    string[] labels;

    protected override async Task OnInitializedAsync()
    {
        
        var parameters = new PaginationParameter { PageNumber = 1, PageSize = 100 };
        var result = await workerService.GetWorkers(parameters);
        var workers = result?.Items.ToList();

        var percentGroups = workers
            .GroupBy(w => w.Percent)
            .Select(g => new { Percent = g.Key, Count = g.Count() })
            .ToList();

        labels = percentGroups.Select(g => $"{g.Percent}% - {g.Count} lucrători").ToArray();
        data = percentGroups.Select(g => (double)g.Count).ToArray();
    }
}
