@page "/login"

@using Application.DTOs
@using Microsoft.AspNetCore.Components.Forms
@using WebUI.Services.UserAccountServices

@inject ISnackbar snackbar
@inject NavigationManager navigationManager
@inject IUserAccountService userService
@inject CurrentUserService currentUserService

<style>
    .form-container {
        width: 320px;
        border-radius: 0.75rem;
        background-color: rgba(17, 24, 39, 1);
        padding: 2rem;
        color: rgba(243, 244, 246, 1);
    }

    .title {
        text-align: center;
        font-size: 1.5rem;
        line-height: 2rem;
        font-weight: 700;
    }

    .form {
        margin-top: 1.5rem;
    }

    .input-group {
        margin-top: 0.25rem;
        font-size: 0.875rem;
        line-height: 1.25rem;
    }

        .input-group label {
            display: block;
            color: rgba(156, 163, 175, 1);
            margin-bottom: 4px;
        }

        .input-group input {
            width: 100%;
            border-radius: 0.375rem;
            border: 1px solid rgba(55, 65, 81, 1);
            outline: 0;
            background-color: rgba(17, 24, 39, 1);
            padding: 0.75rem 1rem;
            color: rgba(243, 244, 246, 1);
        }

            .input-group input:focus {
                border-color: rgba(167, 139, 250);
            }

    .forgot {
        display: flex;
        justify-content: flex-end;
        font-size: 0.75rem;
        line-height: 1rem;
        color: rgba(156, 163, 175,1);
        margin: 8px 0 14px 0;
    }

        .forgot a, .signup a {
            color: rgba(243, 244, 246, 1);
            text-decoration: none;
            font-size: 14px;
        }

            .forgot a:hover, .signup a:hover {
                text-decoration: underline rgba(167, 139, 250, 1);
            }

    .sign {
        display: block;
        width: 100%;
        background-color: rgba(167, 139, 250, 1);
        padding: 0.75rem;
        text-align: center;
        color: rgba(17, 24, 39, 1);
        border: none;
        border-radius: 0.375rem;
        font-weight: 600;
    }

    .signup {
        text-align: center;
        font-size: 0.75rem;
        line-height: 1rem;
        color: rgba(156, 163, 175, 1);
    }

    .centered-container {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 70vh;
    }
</style>

<MudContainer Class="centered-container" MaxWidth="MaxWidth.ExtraExtraLarge">
    <MudStack Class="relative" Style="margin: 0 auto">
        <EditForm Model="user" OnValidSubmit="HandleLogin">
            <MudContainer Class="d-flex align-center flex-grow-1 gap-4" Style="height: 100%" MaxWidth="MaxWidth.ExtraExtraLarge">
                <MudStack Class="relative" Style="margin: 3 auto">
                    <div class="form-container">
                        <p class="title">Conectează-te</p>
                        <br />
                        <div class="input-group">
                            <label style="color:white" for="email">Email</label>
                            <InputText @bind-Value="user.Email" id="email" class="input" placeholder="Introdu email" />
                        </div>
                        <br />
                        <div class="input-group">
                            <label style="color:white" for="password">Parola</label>
                            <InputText @bind-Value="user.Password" id="password" type="password" class="input" placeholder="Introdu parola" />
                            <div class="forgot">
                                <a href="reset-password">Resetare parolă ?</a>
                            </div>
                        </div>
                        <button class="sign" type="submit">Conectare</button>
                        <br />
                        <div class="signup">
                            Nu ai cont ? <a href="register">Înregistrează-te</a>
                        </div>
                    </div>
                </MudStack>
            </MudContainer>
        </EditForm>
    </MudStack>
</MudContainer>

@code {
    private LoginDto user = new LoginDto();

    private bool isLoggingIn = false;
    private string errorMessage = string.Empty;

    private async Task HandleLogin()
    {
        if (user.Email == null || user.Password == null)
        {
            snackbar.Add("Vă rugăm să introduceți atât adresa de e-mail, cât și parola.", Severity.Error);
            return;
        }

        isLoggingIn = true;
        var result = await userService.Login(user);

        if (result.Success)
        {
            await currentUserService.InitializeAsync();
            errorMessage = string.Empty;
            navigationManager.NavigateTo("/", true);
            StateHasChanged();
        }
        else
        {
            errorMessage = result.ResponseMessage;
            snackbar.Add(errorMessage, Severity.Error);
        }

        isLoggingIn = false;
    }
}
